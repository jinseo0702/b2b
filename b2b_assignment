<document>
<source>b2b.pdf</source>
<document_content>
태어나서 루트가 되다
요약: 이 문서는 시스템 관리와 관련된 연습 과제입니다.
버전: 3.1

목차
I 서문 2
II 소개 3
III 일반 지침 4
IV 필수 부분 5
V 보너스 부분 10
VI 제출 및 피어 평가 12
1

제 I 장
서문
2

제 II 장
소개
이 프로젝트는 가상화 세계에 대해 소개합니다.
VirtualBox(또는 UTM)에서 특정 지침에 따라 첫 번째 가상 머신을 생성하게 됩니다.
그런 다음 이 프로젝트가 끝날 때 엄격한 규칙을 적용하며 자신만의 운영 체제를 설정할 수 있습니다.
3

제 III 장
일반 지침
• VirtualBox(또는 UTM)의 사용이 의무적입니다.
• 저장소의 루트에 있는 signature.txt 파일만 제출해야 합니다. 여기에 가상 디스크의 서명을 붙여넣어야 합니다.
제출 및 피어 평가 섹션에서 자세한 내용을 확인하세요.
4

제 IV 장
필수 부분
이 프로젝트에서는 특정 규칙을 따라 첫 번째 서버를 설정하는 것이 목표입니다.
서버를 설정하는 것이므로 최소한의 서비스만 설치하게 됩니다.
따라서 그래픽 인터페이스는 여기에는 필요하지 않습니다. 
X.org 또는 이와 유사한 그래픽 서버를 설치하는 것은 금지되며, 그렇지 않으면 점수가 0점이 됩니다.
운영 체제로는 Debian의 최신 안정 버전(testing/unstable 아님) 또는 Rocky의 최신 안정 버전을 선택해야 합니다. 
시스템 관리 초보자라면 Debian을 강력히 추천합니다.
Rocky 설정은 꽤 복잡합니다. 따라서 KDump를 설정할 필요는 없습니다. 
하지만 시작 시 SELinux가 실행 중이어야 하며, 프로젝트의 요구 사항에 맞게 구성되어야 합니다.
Debian의 경우 AppArmor도 시작 시 실행 중이어야 합니다.
LVM을 사용하여 최소 2개의 암호화된 파티션을 만들어야 합니다. 
다음은 예상되는 파티셔닝의 예입니다:
5

태어나서 루트가 되다
디펜스 중에는 선택한 운영 체제에 대한 몇 가지 질문을 받게 될 것입니다. 
예를 들어, aptitude와 apt의 차이점, SELinux나 AppArmor가 무엇인지 알아야 합니다. 
간단히 말해, 사용하는 것을 이해하세요!
SSH 서비스는 포트 4242에서만 실행됩니다. 보안상의 이유로 root로 SSH를 통해 연결할 수 없어야 합니다.
디펜스 중 새 계정을 설정하여 SSH 사용 방식을 테스트할 것입니다. 
따라서 SSH 작동 방식을 이해해야 합니다.
UFW(또는 Rocky의 경우 firewalld) 방화벽을 통해 운영 체제를 구성해야 하며, 포트 4242만 열어두어야 합니다.
가상 머신을 시작할 때 방화벽이 활성화되어 있어야 합니다.
Rocky의 경우 UFW 대신 firewalld를 사용해야 합니다.
• 가상 머신의 호스트 이름은 로그인 이름에 42가 붙은 형태(예: wil42)여야 합니다. 
평가 중 이 호스트 이름을 수정해야 합니다.
• 강력한 암호 정책을 구현해야 합니다.
• 엄격한 규칙에 따라 sudo를 설치 및 구성해야 합니다.
• root 사용자 외에 사용자 이름이 로그인과 동일한 사용자가 있어야 합니다.
• 이 사용자는 user42 및 sudo 그룹에 속해 있어야 합니다.
디펜스 중에 새 사용자를 생성하고 그룹에 할당해야 합니다.
강력한 암호 정책을 설정하려면 다음 요구 사항을 준수해야 합니다:
• 암호는 30일마다 만료됩니다.
• 암호를 수정할 수 있는 최소 일수는 2일로 설정됩니다.
• 암호 만료 7일 전에 사용자에게 경고 메시지가 표시됩니다.
• 암호는 최소 10자 이상이어야 합니다. 대문자, 소문자 및 숫자를 포함해야 합니다. 또한 연속적으로 동일한 문자가 3개 이상 포함되어서는 안 됩니다.
• 암호에 사용자 이름을 포함할 수 없습니다.
• 이전 암호와 7자 이상 다르지 않아도 되는 루트 암호에는 다음 규칙이 적용되지 않습니다.
• 물론 루트 암호도 이 정책을 준수해야 합니다.
구성 파일을 설정한 후에는 가상 머신에 존재하는 모든 계정, 루트 계정 포함, 암호를 변경해야 합니다.
6

태어나서 루트가 되다
sudo 그룹에 대한 강력한 구성을 설정하려면 다음 요구 사항을 준수해야 합니다:
• sudo를 사용할 때 잘못된 암호로 인한 인증은 3회로 제한됩니다.
• 잘못된 암호로 sudo를 사용할 때 오류가 발생하면 사용자 지정 메시지가 표시됩니다.
• sudo를 사용하는 모든 작업은 입력과 출력이 모두 기록됩니다. 로그 파일은 /var/log/sudo/ 폴더에 저장됩니다.
• 보안을 위해 TTY 모드가 활성화됩니다.
• 마찬가지로 보안을 위해 sudo에서 사용할 수 있는 경로가 제한됩니다.
예시:
/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin
7

태어나서 루트가 되다
마지막으로 monitoring.sh라는 간단한 스크립트를 만들어야 합니다. 이 스크립트는 bash로 작성해야 합니다.
서버 시작 시 이 스크립트는 모든 터미널에 정보(아래 나열된 정보)를 10분마다 표시합니다(wall 참고). 배너는 선택 사항입니다. 
오류가 표시되어서는 안 됩니다.
스크립트는 항상 다음 정보를 표시할 수 있어야 합니다:
• 운영 체제의 아키텍처와 커널 버전
• 물리적 프로세서 수
• 가상 프로세서 수
• 서버의 현재 사용 가능한 RAM과 사용률 백분율
• 서버의 현재 사용 가능한 메모리와 사용률 백분율
• 프로세서의 현재 사용률 백분율
• 마지막 재부팅 날짜와 시간
• LVM이 활성화되어 있는지 여부
• 활성 연결 수
• 서버를 사용 중인 사용자 수
• 서버의 IPv4 주소와 MAC(Media Access Control) 주소
• sudo 프로그램으로 실행된 명령어 수

디펜스 중에는 이 스크립트가 어떻게 작동하는지 설명해야 합니다. 
또한 스크립트를 수정하지 않고 중단해야 합니다.
cron을 살펴보세요.

스크립트의 예상 작동 방식은 다음과 같습니다:

root@wil(tty1)의 브로드캐스트 메시지(Sun Apr 25 15:45:00 2021):
#Architecture: Linux wil 4.19.0-16-amd64 #1 SMP Debian 4.19.181-1 (2021-03-19) x86_64 GNU/Linux
#CPU physical : 1
#vCPU : 1
#Memory Usage: 74/987MB (7.50%)
#Disk Usage: 1009/2Gb (49%)
#CPU load: 6.7%
#Last boot: 2021-04-25 14:45
#LVM use: yes
#Connections TCP : 1 ESTABLISHED
#User log: 1
#Network: IP 10.0.2.15 (08:00:27:51:9b:a5)
#Sudo : 42 cmd
8

태어나서 루트가 되다
아래는 주제 요구 사항을 확인하는 데 사용할 수 있는 두 가지 명령어입니다:

Rocky의 경우:

Debian의 경우:
9

제 V 장
보너스 부분
보너스 목록:
• 다음과 같은 구조의 파티션을 올바르게 설정하세요:
• 다음과 같은 서비스로 기능적인 WordPress 웹사이트를 설정하세요: lighttpd, MariaDB, PHP.
• 유용하다고 생각되는 서비스(NGINX/Apache2 제외)를 하나 설정하세요. 디펜스 중에 해당 선택을 정당화해야 합니다.

보너스 부분을 완료하려면 추가 서비스를 설정할 수 있습니다. 
이 경우 필요에 따라 더 많은 포트를 열어야 합니다.
당연히 UFW/Firewalld 규칙도 그에 맞게 조정해야 합니다.

필수 부분이 완벽하게 수행된 경우에만 보너스 부분이 평가됩니다.
완벽하다는 것은 필수 부분이 모두 충실히 수행되어 오작동 없이 작동한다는 의미입니다.
필수 요구 사항을 모두 통과하지 못한 경우 보너스 부분은 전혀 평가되지 않습니다.
10

제 VI 장
제출 및 피어 평가
Git 저장소의 루트에 있는 signature.txt 파일만 제출해야 합니다.
여기에 가상 머신의 디스크 서명을 붙여넣어야 합니다.
이 서명을 얻으려면 먼저 기본 설치 폴더를 열어야 합니다(VM이 저장된 폴더):
• Windows: %HOMEDRIVE%%HOMEPATH%\VirtualBox VMs\
• Linux: ~/VirtualBox VMs/
• MacM1: ~/Library/Containers/com.utmapp.UTM/Data/Documents/
• MacOS: ~/VirtualBox VMs/

그런 다음 가상 머신의 ".vdi" 파일(또는 UTM 사용자의 ".qcow2") 에서 sha1 형식의 서명을 가져옵니다. 
아래는 rocky_serv.vdi 파일에 대한 4가지 명령어 예시입니다:
• Windows: certUtil -hashfile rocky_serv.vdi sha1
• Linux: sha1sum rocky_serv.vdi
• Mac M1: shasum rocky.utm/Images/disk-0.qcow2
• MacOS: shasum rocky_serv.vdi

이런 형태의 출력을 받게 될 것입니다:
• 6e657c4619944be17df3c31faa030c25e43e40af

평가 후 가상 머신의 서명이 변경될 수 있습니다.
이 문제를 해결하려면 가상 머신을 복제하거나 저장 상태를 사용할 수 있습니다.

물론 Git 저장소에 가상 머신을 제출하는 것은 금지됩니다.
디펜스 중 signature.txt 파일의 서명과 가상 머신의 서명이 일치하지 않으면 점수가 0점이 됩니다.
12

태어나서 루트가 되다
0010 01 11 111 001 000 11 01 10 1 0000 01 1 1010 111 11 0 000
011 00 1 0000 1 0000 0 01 0100 1 0 010 10 01 1 0 0001 0 010 000
00 111 10 111 0010 001100 001100 001100
13</document_content>
</document>

Assistant:
